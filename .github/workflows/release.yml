name: Build and Release

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build:
    name: Build binaries
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            bin_ext: ""
            artifact_name: linux
          - os: macos-latest
            bin_ext: ""
            artifact_name: macos
          - os: windows-latest
            bin_ext: ".exe"
            artifact_name: windows

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Build release binary
        run: cargo build --release

      - name: Prepare artifact
        run: |
          mkdir -p dist
          BIN_NAME=$(cargo metadata --no-deps --format-version 1 | jq -r '.packages[0].targets[] | select(.kind[] | contains("bin")) | .name')
          cp target/release/${BIN_NAME}${{ matrix.bin_ext }} dist/${BIN_NAME}-${{ matrix.artifact_name }}${{ matrix.bin_ext }}
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: binary-${{ matrix.artifact_name }}
          path: dist/*

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Zip binaries
        run: |
          cd dist
          zip -r ../binaries.zip .
        shell: bash

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: latest
          name: Latest Build
          prerelease: false
          files: binaries.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
